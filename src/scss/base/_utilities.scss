/*
 * Utilities
 * Utility classes for common styling needs
 */

// Display
.d-none {
    display: none !important;
  }
  
  .d-inline {
    display: inline !important;
  }
  
  .d-inline-block {
    display: inline-block !important;
  }
  
  .d-block {
    display: block !important;
  }
  
  .d-flex {
    display: flex !important;
  }
  
  .d-inline-flex {
    display: inline-flex !important;
  }
  
  .d-grid {
    display: grid !important;
  }
  
  // Responsive display utilities
  @each $breakpoint in (sm, md, lg, xl, xxl) {
    @include respond-to($breakpoint) {
      .d-#{$breakpoint}-none {
        display: none !important;
      }
      
      .d-#{$breakpoint}-inline {
        display: inline !important;
      }
      
      .d-#{$breakpoint}-inline-block {
        display: inline-block !important;
      }
      
      .d-#{$breakpoint}-block {
        display: block !important;
      }
      
      .d-#{$breakpoint}-flex {
        display: flex !important;
      }
      
      .d-#{$breakpoint}-inline-flex {
        display: inline-flex !important;
      }
      
      .d-#{$breakpoint}-grid {
        display: grid !important;
      }
    }
  }
  
  // Flex utilities
  .flex-row {
    flex-direction: row !important;
  }
  
  .flex-column {
    flex-direction: column !important;
  }
  
  .flex-row-reverse {
    flex-direction: row-reverse !important;
  }
  
  .flex-column-reverse {
    flex-direction: column-reverse !important;
  }
  
  .flex-wrap {
    flex-wrap: wrap !important;
  }
  
  .flex-nowrap {
    flex-wrap: nowrap !important;
  }
  
  .flex-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }
  
  .justify-content-start {
    justify-content: flex-start !important;
  }
  
  .justify-content-end {
    justify-content: flex-end !important;
  }
  
  .justify-content-center {
    justify-content: center !important;
  }
  
  .justify-content-between {
    justify-content: space-between !important;
  }
  
  .justify-content-around {
    justify-content: space-around !important;
  }
  
  .justify-content-evenly {
    justify-content: space-evenly !important;
  }
  
  .align-items-start {
    align-items: flex-start !important;
  }
  
  .align-items-end {
    align-items: flex-end !important;
  }
  
  .align-items-center {
    align-items: center !important;
  }
  
  .align-items-baseline {
    align-items: baseline !important;
  }
  
  .align-items-stretch {
    align-items: stretch !important;
  }
  
  .align-self-start {
    align-self: flex-start !important;
  }
  
  .align-self-end {
    align-self: flex-end !important;
  }
  
  .align-self-center {
    align-self: center !important;
  }
  
  .align-self-baseline {
    align-self: baseline !important;
  }
  
  .align-self-stretch {
    align-self: stretch !important;
  }
  
  .flex-grow-0 {
    flex-grow: 0 !important;
  }
  
  .flex-grow-1 {
    flex-grow: 1 !important;
  }
  
  .flex-shrink-0 {
    flex-shrink: 0 !important;
  }
  
  .flex-shrink-1 {
    flex-shrink: 1 !important;
  }
  
  // Margin and padding utilities
  $spacers: (
    0: 0,
    1: $spacing-1,
    2: $spacing-2,
    3: $spacing-3,
    4: $spacing-4,
    5: $spacing-5,
    6: $spacing-6,
    8: $spacing-8,
    10: $spacing-10,
    12: $spacing-12,
    16: $spacing-16
  );
  
  $sides: (
    '': '',
    't': '-top',
    'b': '-bottom',
    'l': '-left',
    'r': '-right',
    'x': '-left' '-right',
    'y': '-top' '-bottom'
  );
  
  // Generate margin utilities
  @each $size, $value in $spacers {
    @each $side, $prop in $sides {
      @if $side == '' {
        .m-#{$size} {
          margin: $value !important;
        }
      } @else if $side == 'x' {
        .mx-#{$size} {
          margin-left: $value !important;
          margin-right: $value !important;
        }
      } @else if $side == 'y' {
        .my-#{$size} {
          margin-top: $value !important;
          margin-bottom: $value !important;
        }
      } @else {
        .m#{$side}-#{$size} {
          margin#{$prop}: $value !important;
        }
      }
    }
  }
  
  // Generate padding utilities
  @each $size, $value in $spacers {
    @each $side, $prop in $sides {
      @if $side == '' {
        .p-#{$size} {
          padding: $value !important;
        }
      } @else if $side == 'x' {
        .px-#{$size} {
          padding-left: $value !important;
          padding-right: $value !important;
        }
      } @else if $side == 'y' {
        .py-#{$size} {
          padding-top: $value !important;
          padding-bottom: $value !important;
        }
      } @else {
        .p#{$side}-#{$size} {
          padding#{$prop}: $value !important;
        }
      }
    }
  }
  
  // Width and height utilities
  $sizes: (
    25: 25%,
    50: 50%,
    75: 75%,
    100: 100%,
    auto: auto
  );
  
  @each $prop, $abbr in (width: w, height: h) {
    @each $size, $value in $sizes {
      .#{$abbr}-#{$size} {
        #{$prop}: $value !important;
      }
    }
  }
  
  .w-25 {
    width: 25% !important;
  }
  
  .w-50 {
    width: 50% !important;
  }
  
  .w-75 {
    width: 75% !important;
  }
  
  .w-100 {
    width: 100% !important;
  }
  
  .h-25 {
    height: 25% !important;
  }
  
  .h-50 {
    height: 50% !important;
  }
  
  .h-75 {
    height: 75% !important;
  }
  
  .h-100 {
    height: 100% !important;
  }
  
  .mw-100 {
    max-width: 100% !important;
  }
  
  .mh-100 {
    max-height: 100% !important;
  }
  
  .min-vh-100 {
    min-height: 100vh !important;
  }
  
  .vh-100 {
    height: 100vh !important;
  }
  
  .vw-100 {
    width: 100vw !important;
  }
  
  // Position utilities
  .position-static {
    position: static !important;
  }
  
  .position-relative {
    position: relative !important;
  }
  
  .position-absolute {
    position: absolute !important;
  }
  
  .position-fixed {
    position: fixed !important;
  }
  
  .position-sticky {
    position: sticky !important;
  }
  
  .top-0 {
    top: 0 !important;
  }
  
  .bottom-0 {
    bottom: 0 !important;
  }
  
  .start-0 {
    left: 0 !important;
  }
  
  .end-0 {
    right: 0 !important;
  }
  
  .top-50 {
    top: 50% !important;
  }
  
  .bottom-50 {
    bottom: 50% !important;
  }
  
  .start-50 {
    left: 50% !important;
  }
  
  .end-50 {
    right: 50% !important;
  }
  
  .translate-middle {
    transform: translate(-50%, -50%) !important;
  }
  
  .translate-middle-x {
    transform: translateX(-50%) !important;
  }
  
  .translate-middle-y {
    transform: translateY(-50%) !important;
  }
  
  // Background and color utilities
  .bg-primary {
    background-color: $color-primary !important;
  }
  
  .bg-secondary {
    background-color: $color-secondary !important;
  }
  
  .bg-tertiary {
    background-color: $color-tertiary !important;
  }
  
  .bg-white {
    background-color: $color-white !important;
  }
  
  .bg-light {
    background-color: $color-light !important;
  }
  
  .bg-light-gray {
    background-color: $color-light-gray !important;
  }
  
  .bg-gray {
    background-color: $color-gray !important;
  }
  
  .bg-dark-gray {
    background-color: $color-dark-gray !important;
  }
  
  .bg-black {
    background-color: $color-black !important;
  }
  
  .bg-success {
    background-color: $color-success !important;
  }
  
  .bg-info {
    background-color: $color-info !important;
  }
  
  .bg-warning {
    background-color: $color-warning !important;
  }
  
  .bg-danger {
    background-color: $color-danger !important;
  }
  
  // Border utilities
  .border {
    border: 1px solid $color-light-gray !important;
  }
  
  .border-0 {
    border: 0 !important;
  }
  
  .border-top {
    border-top: 1px solid $color-light-gray !important;
  }
  
  .border-top-0 {
    border-top: 0 !important;
  }
  
  .border-end {
    border-right: 1px solid $color-light-gray !important;
  }
  
  .border-end-0 {
    border-right: 0 !important;
  }
  
  .border-bottom {
    border-bottom: 1px solid $color-light-gray !important;
  }
  
  .border-bottom-0 {
    border-bottom: 0 !important;
  }
  
  .border-start {
    border-left: 1px solid $color-light-gray !important;
  }
  
  .border-start-0 {
    border-left: 0 !important;
  }
  
  .border-primary {
    border-color: $color-primary !important;
  }
  
  .border-secondary {
    border-color: $color-secondary !important;
  }
  
  .border-tertiary {
    border-color: $color-tertiary !important;
  }
  
  .rounded {
    border-radius: $border-radius !important;
  }
  
  .rounded-0 {
    border-radius: 0 !important;
  }
  
  .rounded-sm {
    border-radius: $border-radius-sm !important;
  }
  
  .rounded-lg {
    border-radius: $border-radius-lg !important;
  }
  
  .rounded-xl {
    border-radius: $border-radius-xl !important;
  }
  
  .rounded-pill {
    border-radius: $border-radius-pill !important;
  }
  
  .rounded-circle {
    border-radius: 50% !important;
  }
  
  .rounded-top {
    border-top-left-radius: $border-radius !important;
    border-top-right-radius: $border-radius !important;
  }
  
  .rounded-bottom {
    border-bottom-left-radius: $border-radius !important;
    border-bottom-right-radius: $border-radius !important;
  }
  
  // Shadow utilities
  .shadow-none {
    box-shadow: none !important;
  }
  
  .shadow-sm {
    box-shadow: $shadow-sm !important;
  }
  
  .shadow {
    box-shadow: $shadow !important;
  }
  
  .shadow-lg {
    box-shadow: $shadow-lg !important;
  }
  
  // Overflow utilities
  .overflow-auto {
    overflow: auto !important;
  }
  
  .overflow-hidden {
    overflow: hidden !important;
  }
  
  .overflow-visible {
    overflow: visible !important;
  }
  
  .overflow-scroll {
    overflow: scroll !important;
  }
  
  // Visibility
  .visible {
    visibility: visible !important;
  }
  
  .invisible {
    visibility: hidden !important;
  }
  
  // Accessibility
  .visually-hidden {
    @include visually-hidden;
  }
  
  // Clearfix
  .clearfix {
    @include clearfix;
  }
  
  // Cursor utilities
  .cursor-pointer {
    cursor: pointer !important;
  }
  
  .cursor-default {
    cursor: default !important;
  }
  
  .cursor-not-allowed {
    cursor: not-allowed !important;
  }
  
  // Text utilities
  .text-break {
    word-wrap: break-word !important;
    word-break: break-word !important;
  }
  
  .text-truncate {
    @include text-truncate;
  }
  
  // Z-index utilities
  .z-0 {
    z-index: 0 !important;
  }
  
  .z-10 {
    z-index: 10 !important;
  }
  
  .z-20 {
    z-index: 20 !important;
  }
  
  .z-30 {
    z-index: 30 !important;
  }
  
  .z-40 {
    z-index: 40 !important;
  }
  
  .z-50 {
    z-index: 50 !important;
  }
  
  .z-auto {
    z-index: auto !important;
  }
  
  // Transitions
  .transition {
    transition: $transition-base !important;
  }
  
  // Opacity utilities
  .opacity-0 {
    opacity: 0 !important;
  }
  
  .opacity-25 {
    opacity: 0.25 !important;
  }
  
  .opacity-50 {
    opacity: 0.5 !important;
  }
  
  .opacity-75 {
    opacity: 0.75 !important;
  }
  
  .opacity-100 {
    opacity: 1 !important;
  }